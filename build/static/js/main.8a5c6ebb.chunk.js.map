{"version":3,"sources":["InfoBox.js","LineGraph.js","Table.js","util.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","active","isRed","props","Card","onClick","className","CardContent","Typography","color","gutterBottom","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","parser","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","useEffect","fetch","then","res","json","chartData","casesType","lastDataPoint","date","newDataPoint","x","y","push","buildChartData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","idx","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","prettyPrintStat","stat","showDataOnMap","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","Map","zoom","TileLayer","url","attribution","theme","createMuiTheme","overrides","MuiCssBaseline","html","MozOsxFontSmoothing","WebkitFontSmoothing","palette","primary","main","light","dark","contrastText","typography","h1","fontFamily","join","useStyles","makeStyles","app","justifyContent","grey","A300","padding","breakpoints","down","flexDirection","flex","alignItems","marginBottom","secondary","fontSize","fontWeight","width","marginTop","App","classes","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","sortedData","sort","a","b","sortData","ThemeProvider","CssBaseline","left","header","FormControl","dropdown","Select","variant","onChange","e","countryCode","target","console","log","MenuItem","menuItem","stats","todayCases","todayRecovered","todayDeaths","right","information","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a5c6ebb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      }`}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          {cases}\r\n        </h2>\r\n\r\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n          {total} Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import './LineGraph.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useEffect, useState } from 'react';\r\nimport numeral from 'numeral';\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      }\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  };\r\n  return chartData;\r\n};\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          parser: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      }\r\n    ],\r\n  },\r\n}\r\n\r\nfunction LineGraph() {\r\n  \r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      const chartData = buildChartData(data, 'cases');\r\n      setData(chartData);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"linegraph\">\r\n      {\r\n        data?.length > 0 && (\r\n          <Line \r\n          options={options}\r\n          data={\r\n            {\r\n              datasets: [\r\n                {\r\n                  backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                  borderColor: \"#CC1034\",\r\n                  data: data\r\n                }\r\n              ]\r\n            }\r\n          } />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n      <table>\r\n        <tbody>\r\n        {countries.map((country, idx) => (\r\n          <tr key={idx}>\r\n            <td>{country.country}</td>\r\n            <td>\r\n              <strong>{numeral(country.cases).format(\"0,0\")}</strong>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;","  \r\nimport React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  // sortedData.sort((a, b) => {\r\n  //   if (a.cases > b.cases) {\r\n  //     return -1;\r\n  //   } else {\r\n  //     return 1;\r\n  //   }\r\n  // });\r\n  // return sortedData;\r\n\r\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\r\n}\r\n\r\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country, idx) => (\r\n    <Circle key={idx}\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));","import React from \"react\";\r\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","import React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport LineGraph from './LineGraph';\nimport Table from './Table';\nimport { sortData, prettyPrintStat } from './util';\nimport numeral from 'numeral';\nimport Map from './Map';\nimport 'leaflet/dist/leaflet.css';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        html: {\n          MozOsxFontSmoothing: 'grayscale',\n          WebkitFontSmoothing: 'antialiased',\n        },\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: '#0DD8AB',\n      light: '#36DDB8',\n      dark: '#3A645B',\n      contrastText: '#1A1A1A',\n    },\n  },\n  typography: {\n    h1: {\n      fontFamily: ['Anton', 'sans-serif'].join(','),\n    },\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n  app: {\n    fontFamily: ['Anton', 'sans-serif'].join(','),\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    backgroundColor: theme.palette.grey.A300,\n    padding: 20,\n  },\n  [theme.breakpoints.down('md')]: {\n    app: {\n      flexDirection: 'column',\n    },\n  },\n  left: {\n    flex: 0.9,\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 20,\n    justifyContent: 'space-between',\n    '& h1': {\n      color: theme.palette.secondary.dark,\n      fontSize: '2.5rem',\n      fontFamily: ['Yanone Kaffeesatz', 'sans-serif'].join(','),\n      fontWeight: 700,\n    },\n  },\n  dropdown: {\n    backgroundColor: 'white',\n  },\n  stats: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  right: {\n    width: 300,\n  },\n  information: {\n    '& h3': {\n      color: theme.palette.secondary.main,\n      fontFamily: ['Yanone Kaffeesatz', 'sans-serif'].join(','),\n      fontWeight: 700,\n      fontSize: '1.4rem',\n      marginTop: '1rem',\n    },\n    '& p': {\n      marginTop: '3rem',\n    },\n  },\n  menuItem: {\n    fontFamily: ['Yanone Kaffeesatz', 'sans-serif'].join(','),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [country, setInputCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n  // const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n      .then(res => res.json())\n      .then(data => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/countries')\n      .then(res => res.json())\n      .then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2,\n        }));\n        let sortedData = sortData(data);\n        setCountries(countries);\n        setMapCountries(data);\n        setTableData(sortedData);\n      });\n  }, []);\n\n  const onCountryChange = e => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === 'worldwide'\n        ? 'https://disease.sh/v3/covid-19/all'\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        console.log('data.countryInfo.lat => ' + data.countryInfo.lat);\n        console.log('data.countryInfo.long => ' + data.countryInfo.long);\n        //setMapCenter({ lat: data.countryInfo.lat, lng: data.countryInfo.long });\n        // setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n\n        setMapCenter([31.80746, -20.4796]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.app}>\n        <div className={classes.left}>\n          <div className={classes.header}>\n            <h1>COVID-19 Dashboard</h1>\n            <FormControl className={classes.dropdown}>\n              <Select\n                variant=\"outlined\"\n                value={country}\n                onChange={onCountryChange}\n              >\n                <MenuItem\n                  key={-1}\n                  value=\"worldwide\"\n                  className={classes.menuItem}\n                >\n                  Worldwide\n                </MenuItem>\n                {countries.map((country, idx) => (\n                  <MenuItem key={idx} value={country.value}>\n                    {country.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div className={classes.stats}>\n            <InfoBox\n              onClick={e => setCasesType('cases')}\n              title=\"Coronavirus Cases\"\n              isRed\n              active={casesType === 'cases'}\n              cases={prettyPrintStat(countryInfo.todayCases)}\n              total={numeral(countryInfo.cases).format('0.0a')}\n            />\n            <InfoBox\n              onClick={e => setCasesType('recovered')}\n              title=\"Recovered\"\n              active={casesType === 'recovered'}\n              cases={prettyPrintStat(countryInfo.todayRecovered)}\n              total={numeral(countryInfo.recovered).format('0.0a')}\n            />\n            <InfoBox\n              onClick={e => setCasesType('deaths')}\n              title=\"Deaths\"\n              isRed\n              active={casesType === 'deaths'}\n              cases={prettyPrintStat(countryInfo.todayDeaths)}\n              total={numeral(countryInfo.deaths).format('0.0a')}\n            />\n          </div>\n          <Map\n            countries={mapCountries}\n            casesType={casesType}\n            center={mapCenter}\n            zoom={mapZoom}\n          />\n        </div>\n        <Card className={classes.right}>\n          <CardContent>\n            <div className={classes.information}>\n              <h3>Live Cases by Country</h3>\n              <Table countries={tableData} />\n              <p></p>\n              <h3>Worldwide new {casesType}</h3>\n              <LineGraph casesType={casesType} />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// Remove strict mode because of annoying on warning message from using 'Select' material-ui <findDOMNode is deprecated in StrictMode>\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}