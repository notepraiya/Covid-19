{"version":3,"sources":["InfoBox.js","Map.js","Table.js","LineGraph.js","App.js","util.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","Map","Table","countries","map","country","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","useEffect","fetch","then","res","json","console","log","chartData","casesType","lastDataPoint","date","newDataPoint","x","y","push","buildChartData","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","sort","a","b","sortData","item","name","iso2","FormControl","Select","variant","onChange","e","countryCode","target","url","style","MenuItem","idx","todayCases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mOAkBeA,MAhBf,YAA2C,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC/B,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYF,UAAU,iBAAiBG,MAAM,gBAA7C,SACGP,IAEH,oBAAII,UAAU,iBAAd,SAAgCH,IAChC,eAACK,EAAA,EAAD,CAAYF,UAAU,iBAAiBG,MAAM,gBAA7C,UACGL,EADH,kB,MCAOM,MARf,WACE,OACE,yB,MCWWC,MAbf,YAA+B,IAAdC,EAAa,EAAbA,UACf,OACE,qBAAKN,UAAU,QAAf,SACIM,EAAUC,KAAI,gBAAEC,EAAF,EAAEA,QAASX,EAAX,EAAWA,MAAX,OACd,+BACE,6BAAKW,IACL,6BAAI,iCAASX,e,yCCajBY,EAAU,CACdC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRC,MAAO,CACLC,OAAQ,IAGZC,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACTC,MAAO,SAAUC,EAAaC,GAC5B,OAAOC,IAAQF,EAAYG,OAAOC,OAAO,WAI/CC,OAAQ,CACNC,MAAO,CACL,CACEC,KAAM,OACNC,KAAM,CACJJ,OAAQ,WACRK,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTrB,SAAS,GAEXsB,MAAO,CACLC,SAAU,SAAUV,EAAOW,EAAOC,GAChC,OAAOb,IAAQC,GAAOC,OAAO,YA8C1BY,MAtCf,WAAsB,IAAD,EAEKC,mBAAS,IAFd,mBAEZhB,EAFY,KAENiB,EAFM,KAcnB,OAVAC,qBAAU,WACRC,MAAM,8DACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GACJuB,QAAQC,IAAIxB,GACZ,IAAMyB,EArEW,SAACzB,EAAM0B,GAC5B,IACIC,EADEF,EAAY,GAElB,IAAK,IAAIG,KAAQ5B,EAAKzB,MAAO,CAC3B,GAAIoD,EAAe,CACjB,IAAIE,EAAe,CACjBC,EAAGF,EACHG,EAAG/B,EAAK0B,GAAWE,GAAQD,GAE7BF,EAAUO,KAAKH,GAEjBF,EAAgB3B,EAAK0B,GAAWE,GAElC,OAAOH,EAwDeQ,CAAejC,EAAM,SACvCiB,EAAQQ,QAET,IAGD,qBAAK/C,UAAU,YAAf,UAEQ,OAAJsB,QAAI,IAAJA,OAAA,EAAAA,EAAMkC,QAAS,GACb,cAAC,OAAD,CACA/C,QAASA,EACTa,KACE,CACEmC,SAAU,CACR,CACEC,gBAAiB,yBACjBC,YAAa,UACbrC,KAAMA,UCNTsC,MA5Ef,WAAgB,IAAD,EACqBtB,mBAAS,IAD9B,mBACNhC,EADM,KACKuD,EADL,OAEiBvB,mBAAS,aAF1B,mBAEN9B,EAFM,KAEGsD,EAFH,OAGyBxB,mBAAS,IAHlC,mBAGNyB,EAHM,KAGOC,EAHP,OAIqB1B,mBAAS,IAJ9B,mBAIN2B,EAJM,KAIKC,EAJL,KAsCb,OAhCA1B,qBAAU,WACRC,MAAM,4CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GACJ4C,ECnBkB,SAAC5C,GAYvB,OAXgB,YAAOA,GAWL6C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEvE,MAAQwE,EAAExE,OAAS,EAAI,KDOzCyE,CAAShD,IACtBuC,EAAavC,EAAKf,KAAI,SAAAgE,GAAI,MACxB,CACEC,KAAMD,EAAK/D,QACXgB,MAAO+C,EAAKR,YAAYU,aAI9BhC,MAAM,sCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GACJ0C,EAAe1C,QAEhB,IAgBD,sBAAKtB,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oDACA,cAAC0E,EAAA,EAAD,CAAa1E,UAAU,gBAAvB,SACE,eAAC2E,EAAA,EAAD,CAAQC,QAAQ,WAAWpD,MAAOhB,EAASqE,SAnB7B,SAACC,GACvB,IAAMC,EAAcD,EAAEE,OAAOxD,MAC7BqB,QAAQC,IAAI,kBAAoBiC,GAChCjB,EAAWiB,GACX,IAAME,EAAsB,cAAhBF,EAA8B,qCAA9B,mDAAiHA,GAC7HtC,MAAMwC,GACLvC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAApB,GACJwC,EAAWiB,GACXf,EAAe1C,OAU6D4D,MAAO,CAAExB,gBAAiB,SAAhG,UACE,cAACyB,EAAA,EAAD,CAAmB3D,MAAM,YAAzB,sBAAc,MAEZlB,EAAUC,KAAI,SAACC,EAAS4E,GAAV,OACZ,cAACD,EAAA,EAAD,CAAoB3D,MAAOhB,EAAQgB,MAAnC,SAA2ChB,EAAQgE,MAApCY,cAOzB,sBAAKpF,UAAU,aAAf,UACA,cAAC,EAAD,CAASJ,MAAM,oBAAoBC,MAAOkE,EAAYsB,WAAYvF,MAAOiE,EAAYlE,QACrF,cAAC,EAAD,CAASD,MAAM,YAAYC,MAAOkE,EAAYuB,eAAgBxF,MAAOiE,EAAYwB,YACjF,cAAC,EAAD,CAAS3F,MAAM,SAASC,MAAOkE,EAAYyB,YAAa1F,MAAOiE,EAAY0B,YAG3E,cAAC,EAAD,OAEF,cAAC1F,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACE,eAACC,EAAA,EAAD,WACE,uDACA,cAAC,EAAD,CAAOK,UAAW2D,IAClB,qDACA,cAAC,EAAD,aEjEKyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCQdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.6034024c.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nfunction InfoBox({ title, cases, total }) {\r\n  return (\r\n    <Card className=\"infobox\">\r\n      <CardContent>\r\n        <Typography className=\"infobox__title\" color=\"textSecondary\">\r\n          {title}\r\n        </Typography>\r\n        <h2 className=\"infobox__cases\">{cases}</h2>\r\n        <Typography className=\"infobox__total\" color=\"textSecondary\">\r\n          {total} Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default InfoBox;\r\n","import './Map.css';\r\n\r\nfunction Map() {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Map;\r\n","import './Table.css';\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n      { countries.map(({country, cases}) => (\r\n        <tr>\r\n          <td>{country}</td>\r\n          <td><strong>{cases}</strong></td>\r\n        </tr>\r\n      )) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table;\r\n","import './LineGraph.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useEffect, useState } from 'react';\r\nimport numeral from 'numeral';\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      }\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  };\r\n  return chartData;\r\n};\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      }\r\n    ],\r\n  },\r\n}\r\n\r\nfunction LineGraph() {\r\n  \r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      const chartData = buildChartData(data, 'cases');\r\n      setData(chartData);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"linegraph\">\r\n      {\r\n        data?.length > 0 && (\r\n          <Line \r\n          options={options}\r\n          data={\r\n            {\r\n              datasets: [\r\n                {\r\n                  backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                  borderColor: \"#CC1034\",\r\n                  data: data\r\n                }\r\n              ]\r\n            }\r\n          } />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph;\r\n","import './App.css';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData } from './util';\nimport LineGraph from './LineGraph';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\n    .then(res => res.json())\n    .then(data => {\n      setTableData(sortData(data));\n      setCountries(data.map(item => (\n        {\n          name: item.country,\n          value: item.countryInfo.iso2\n        }\n      )))\n    });\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(res => res.json())\n    .then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n\n  const onCountryChange = (e) => {\n    const countryCode = e.target.value;\n    console.log('countryCode => ' + countryCode);\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 dashboard</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange} style={{ backgroundColor: 'white' }} >\n              <MenuItem key='-1' value='worldwide'>Worldwide</MenuItem>\n              {\n                countries.map((country, idx) => (\n                  <MenuItem key={idx} value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n        <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n        <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n        <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />  \n        </div>\n\n        <Map />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new cases</h3>\n          <LineGraph />\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n","export const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  // sortedData.sort((a, b) => {\r\n  //   if (a.cases > b.cases) {\r\n  //     return -1;\r\n  //   } else {\r\n  //     return 1;\r\n  //   }\r\n  // });\r\n  // return sortedData;\r\n\r\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// Remove strict mode because of annoying on warning message from using 'Select' material-ui <findDOMNode is deprecated in StrictMode>\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}