{"version":3,"sources":["InfoBox.js","LineGraph.js","Table.js","util.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","active","isRed","props","Card","onClick","className","CardContent","Typography","color","gutterBottom","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","parser","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","useEffect","fetch","then","res","json","chartData","casesType","lastDataPoint","date","newDataPoint","x","y","push","buildChartData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","idx","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","prettyPrintStat","stat","showDataOnMap","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","Map","zoom","TileLayer","url","attribution","App","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","sortedData","sort","a","b","sortData","FormControl","Select","variant","onChange","e","countryCode","target","MenuItem","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db22f5d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      }`}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          {cases}\r\n        </h2>\r\n\r\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n          {total} Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import './LineGraph.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useEffect, useState } from 'react';\r\nimport numeral from 'numeral';\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      }\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  };\r\n  return chartData;\r\n};\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          parser: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      }\r\n    ],\r\n  },\r\n}\r\n\r\nfunction LineGraph() {\r\n  \r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      const chartData = buildChartData(data, 'cases');\r\n      setData(chartData);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"linegraph\">\r\n      {\r\n        data?.length > 0 && (\r\n          <Line \r\n          options={options}\r\n          data={\r\n            {\r\n              datasets: [\r\n                {\r\n                  backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                  borderColor: \"#CC1034\",\r\n                  data: data\r\n                }\r\n              ]\r\n            }\r\n          } />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n      <table>\r\n        <tbody>\r\n        {countries.map((country, idx) => (\r\n          <tr key={idx}>\r\n            <td>{country.country}</td>\r\n            <td>\r\n              <strong>{numeral(country.cases).format(\"0,0\")}</strong>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;","  \r\nimport React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  // sortedData.sort((a, b) => {\r\n  //   if (a.cases > b.cases) {\r\n  //     return -1;\r\n  //   } else {\r\n  //     return 1;\r\n  //   }\r\n  // });\r\n  // return sortedData;\r\n\r\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\r\n}\r\n\r\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country, idx) => (\r\n    <Circle key={idx}\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));","import React from \"react\";\r\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((res) => res.json())\n    .then((data) => {\n      setCountryInfo(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\n    .then((res) => res.json())\n    .then((data) => {\n      const countries = data.map((country) => ({\n        name: country.country,\n        value: country.countryInfo.iso2,\n      }));\n      let sortedData = sortData(data);\n      setCountries(countries);\n      setMapCountries(data);\n      setTableData(sortedData);\n    });\n  }, []);\n\n  const onCountryChange = (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url)\n    .then((res) => res.json())\n    .then((data) => {\n      setInputCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem key={-1} value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country, idx) => (\n                <MenuItem key={idx} value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// Remove strict mode because of annoying on warning message from using 'Select' material-ui <findDOMNode is deprecated in StrictMode>\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}